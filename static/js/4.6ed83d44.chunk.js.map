{"version":3,"sources":["componentHook/AddProd.jsx"],"names":["initProduct","name","unit","price","adult","areEqual","prevProps","nextProps","onDisable","Add","addPro","useState","product","setProduct","checkAnswer","setCheckAnswer","addVisibility","setAddVisibility","formRef","React","createRef","inputRef","useRef","addToInputRef","useCallback","el","current","includes","push","useEffect","setTimeout","focus","console","log","handleKeyDown","e","key","target","preventDefault","handleOnChange","propValue","value","checked","formStyle","className","content","disabled","placement","delay","onClick","onSubmit","ref","htmlFor","type","id","required","maxLength","placeholder","onChange","onKeyDown","step","min","max","memo"],"mappings":"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","file":"static/js/4.6ed83d44.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport Tippy from \"@tippyjs/react\";\r\n\r\nconst initProduct = { name: \"\", unit: \"piece\", price: 0, adult: false };\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  return prevProps.onDisable === nextProps.onDisable;\r\n}\r\n\r\nfunction Add({ onDisable, addPro }) {\r\n  const [product, setProduct] = useState(initProduct);\r\n  const [checkAnswer, setCheckAnswer] = useState();\r\n  const [addVisibility, setAddVisibility] = useState(false);\r\n  const formRef = React.createRef();\r\n  const inputRef = useRef([]);\r\n\r\n  const addToInputRef = useCallback((el) => {\r\n    if (el && !inputRef.current.includes(el)) {\r\n      inputRef.current.push(el);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addVisibility === true) {\r\n      setTimeout(() => {\r\n        inputRef.current[0].focus();\r\n      }, 1300);\r\n    }\r\n  }, [addVisibility]);\r\n\r\n  console.log(\"AddProd render!\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    console.log(e.target);\r\n    addPro(product);\r\n    setProduct(initProduct);\r\n  };\r\n\r\n  // handle focus on input fields while using the Enter key\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      switch (e.target.name) {\r\n        case \"name\":\r\n          e.preventDefault();\r\n          inputRef.current[1].focus();\r\n          break;\r\n        case \"unit\":\r\n          e.preventDefault();\r\n          inputRef.current[2].focus();\r\n          break;\r\n        case \"price\":\r\n          e.preventDefault();\r\n          inputRef.current[3].focus();\r\n          break;\r\n        case \"adult\":\r\n          e.preventDefault();\r\n          inputRef.current[4].focus();\r\n          break;\r\n        case \"submit\":\r\n          inputRef.current[0].focus();\r\n          break;\r\n        default:\r\n          e.preventDefault();\r\n          inputRef.current[0].focus();\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    let propValue = e.target.value;\r\n    if (e.target.name === \"adult\") {\r\n      if (e.target.checked === true) {\r\n        propValue = true;\r\n      } else {\r\n        propValue = false;\r\n      }\r\n    } else if (e.target.name === \"price\") {\r\n      if (propValue[0] <= 0) {\r\n        setCheckAnswer(\"The price cannot start with 0 number.\");\r\n        return;\r\n      } else if (propValue[0] !== 0) {\r\n        setCheckAnswer(\"\");\r\n      }\r\n    }\r\n    setProduct({ ...product, [e.target.name]: propValue });\r\n  };\r\n\r\n  const formStyle = addVisibility\r\n    ? \"formAdd row visible-form\"\r\n    : \" formAdd row hidden-form\";\r\n\r\n  return (\r\n    <div className=\"text-left bg-light\">\r\n      <Tippy\r\n        content=\"Click to open add form. Use enter, tab key or mouse to jump between input fields\"\r\n        disabled={onDisable}\r\n        placement=\"top-start\"\r\n        delay={100}\r\n      >\r\n        <button\r\n          className=\"btn btn-info add-btn mt-3 mb-2 ml-2\"\r\n          onClick={() => setAddVisibility(!addVisibility)}\r\n        >\r\n          Add a new product\r\n        </button>\r\n      </Tippy>\r\n\r\n      <div className=\"container formWrapp\">\r\n        <form onSubmit={handleSubmit} className={formStyle} ref={formRef}>\r\n          <div className=\"row mx-0\">\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"name\" className=\"label ml-md-3 mr-1\">\r\n                Name:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                className=\"form-control\"\r\n                value={product.name}\r\n                required\r\n                maxLength=\"75\"\r\n                placeholder=\"Product name\"\r\n                onChange={handleOnChange}\r\n                ref={addToInputRef}\r\n                onKeyDown={handleKeyDown}\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"unit\" className=\"label ml-md-3 mr-1\">\r\n                Unit:\r\n              </label>\r\n              <select\r\n                className=\"form-control form-control-sm\"\r\n                id=\"unit\"\r\n                name=\"unit\"\r\n                required\r\n                onChange={handleOnChange}\r\n                ref={addToInputRef}\r\n                onKeyDown={handleKeyDown}\r\n              >\r\n                <option>piece</option>\r\n                <option>kg</option>\r\n                <option>box</option>\r\n                <option>can</option>\r\n                <option>bottle</option>\r\n                <option>litre</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"price\" className=\"mr-1\">\r\n                Price ($):\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"any\"\r\n                name=\"price\"\r\n                id=\"price\"\r\n                value={product.price}\r\n                className=\"form-control\"\r\n                min=\"1\"\r\n                max=\"10000\"\r\n                required\r\n                placeholder=\"Price\"\r\n                onChange={handleOnChange}\r\n                ref={addToInputRef}\r\n                onKeyDown={handleKeyDown}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group mt-4 col-md-4\">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"adultsCheck\"\r\n                  name=\"adult\"\r\n                  checked={product.adult}\r\n                  onChange={handleOnChange}\r\n                  ref={addToInputRef}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"adultsCheck\">\r\n                  Only for adults\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"checkAnswer\">{checkAnswer}</div>\r\n          <div className=\"w-100\"></div>\r\n          <button\r\n            name=\"submit\"\r\n            className=\"btn btn-success ml-3 add-submit my-1\"\r\n            ref={addToInputRef}\r\n            onKeyDown={handleKeyDown}\r\n          >\r\n            Add\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Add, areEqual);\r\n"],"sourceRoot":""}