{"version":3,"sources":["componentHook/CounterH.jsx","componentHook/CountersH.jsx","componentHook/NavbarH.jsx","componentHook/AddProd.jsx","componentHook/DevelopInfo.js","App.js","reportWebVitals.js","index.js"],"names":["CounterH","React","forwardRef","props","ref","counterContext","useContext","CountContext","modalTipContext","ModalTipsContext","console","log","singleCounter","modalOpen","counterToDelete","addMinusStyle","fontSize","fontWeight","getBadgeClasses","useMemo","classes","value","formatCount","count","handleValueChange","txtType","adult","setAdultCounterClicked","setModalIsOpen","toastNotify","countDispatch","type","counterNo","className","name","unit","price","content","disabled","disable","placement","delay","onClick","style","e","memo","CountersH","useState","color","textOffer","setTextOffer","modalIsOpen","counterRef","useRef","counterToBeDeleted","setCounterToBeDeleted","priceContext","totalPrice","prevTotalPrice","prevWholePrice","useEffect","callTextOffer","useCallback","a","handleTextOffer","txt","addToRef","el","current","includes","push","handleModalDelete","target","id","Promise","resolve","reject","undefined","Error","setTimeout","durationTime","callSetModal","bool","getBtnTipsClass","counterArray","countState","map","counter","isOpen","onRequestClose","shouldCloseOnOverlayClick","overlay","backgroundColor","padding","setDisable","Modal","setAppElement","NavbarH","badgeClasses","setBadgeClasses","getBadgeCl","handleSumupValues","reduce","countPrev","countNext","prevWholeValue","length","href","filter","start","end","duration","countUpRef","prefix","separator","initProduct","Add","addPro","product","setProduct","addVisibility","setAddVisibility","formRef","createRef","inputRef","addToInputRef","focus","handleKeyDown","key","preventDefault","handleOnChange","propName","checked","formStyle","onSubmit","htmlFor","required","maxLength","placeholder","onChange","onKeyDown","step","min","max","DevelopInfo","createContext","initState","reducer","state","action","index","stateCopy","indexOf","i","obj","adultCounter","App","useReducer","countObjects","dispatch","prevC","nextC","prevTotalValue","adultCounterClicked","notify","toast","info","position","autoClose","closeOnClick","pauseOnHover","draggable","transition","Slide","c1","c2","handleModalAnswer","forEach","addProduct","productObj","valueContextFirst","valueContextModal","Provider","AddProd","textAlign","limit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa9f6866.chunk.js","sourcesContent":["import React, { useContext, useMemo } from \"react\";\r\nimport { CountContext, ModalTipsContext } from \"../App\";\r\nimport Tippy from \"@tippyjs/react\";\r\n\r\nconst CounterH = React.forwardRef((props, ref) => {\r\n  const counterContext = useContext(CountContext);\r\n  const modalTipContext = useContext(ModalTipsContext);\r\n\r\n  console.log(\"CounterH render!\");\r\n\r\n  const { singleCounter, modalOpen, counterToDelete } = props;\r\n\r\n  const addMinusStyle = {\r\n    fontSize: \"1.25rem\",\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  const getBadgeClasses = useMemo(() => {\r\n    // console.log(\"getBadgeClasses CounterH\");\r\n    let classes =\r\n      \"badge-text mt-2 mt-md-0 mx-3 mx-sm-1 mx-md-1 mx-lg-0 mx-xl-2 \";\r\n    classes += singleCounter.value === 0 ? \"bwarning\" : \"bprimary\";\r\n    return classes;\r\n  }, [singleCounter.value]);\r\n\r\n  const formatCount = useMemo(() => {\r\n    // console.log(\"formatCount Fn\");\r\n    // object destructuring\r\n    const { value: count } = singleCounter;\r\n    return count === 0 ? \"Zero\" : count;\r\n  }, [singleCounter]);\r\n\r\n  // handle change of value i.e. increment or decrement of the product number\r\n  const handleValueChange = (txtType) => {\r\n    // console.log(\"handleValueChange Fn\");\r\n    if (singleCounter.adult === true) {\r\n      if (txtType === \"increment\") {\r\n        // console.log(\"adult zone!\");\r\n        counterContext.setAdultCounterClicked(singleCounter);\r\n        modalTipContext.setModalIsOpen(true);\r\n      } else if (txtType === \"decrement\") {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (\r\n        singleCounter.value >= 10 &&\r\n        singleCounter.value % 10 === 0 &&\r\n        txtType === \"increment\"\r\n      ) {\r\n        modalTipContext.toastNotify();\r\n        counterContext.countDispatch({\r\n          type: txtType,\r\n          counterNo: singleCounter,\r\n        });\r\n      } else if (txtType === \"increment\") {\r\n        counterContext.countDispatch({\r\n          type: txtType,\r\n          counterNo: singleCounter,\r\n        });\r\n      } else if (txtType === \"decrement\" && singleCounter.value > 0) {\r\n        counterContext.countDispatch({\r\n          type: txtType,\r\n          counterNo: singleCounter,\r\n        });\r\n      } else if (txtType === \"decrement\" && singleCounter.value <= 0) {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDelete = (e) => {\r\n    modalOpen(true);\r\n    counterToDelete(singleCounter);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-4 row mx-0 px-0\" ref={ref}>\r\n      <div className=\"col-sm-4 col-lg-3 name-col text-center\">\r\n        <div className=\"sm-caps bgr1 mx-2 mb-1\">Name:</div>\r\n        <div className=\"fCol1 prodName\">{singleCounter.name}</div>\r\n      </div>\r\n\r\n      {/* <div className=\"w-100 d-md-none\"></div> */}\r\n      <div className=\"mt-sm-0 mt-3 col-md-2 col-sm-3 col-lg-2 text-center\">\r\n        <div className=\"sm-caps bgr1 mx-2 mb-1\">Unit:</div>\r\n        <div className=\"fCol1 unitQ mb-sm-0\">{singleCounter.unit}</div>\r\n      </div>\r\n\r\n      {/* <div className=\"w-100 d-md-none\"></div> */}\r\n      <div className=\"mt-sm-0 mt-3 col-md-2 col-sm-3 col-lg-2 text-center\">\r\n        <div className=\"sm-caps bgr1 mx-2 mb-1\">Price:</div>\r\n        <div className=\"fCol2 price mb-sm-0\">${singleCounter.price}</div>\r\n      </div>\r\n\r\n      <div className=\"w-50 d-none d-sm-block d-md-none\"></div>\r\n      <div className=\"col-lg-2 col-md-3 col-sm-4 mt-sm-0 mt-2 mb-2 mb-sm-0 text-center px-3 pr-sm-2\">\r\n        <div className={getBadgeClasses}>\r\n          <span className=\"badge-no-text\">{formatCount}</span>\r\n        </div>\r\n        <Tippy\r\n          content=\"Click to increment the number of the product to buy\"\r\n          disabled={counterContext.disable}\r\n          placement=\"top-end\"\r\n          delay={100}\r\n        >\r\n          <button\r\n            onClick={() => handleValueChange(\"increment\")}\r\n            className=\"btn btn-success btn-sm my-1 plus\"\r\n          >\r\n            <span style={addMinusStyle}>+</span>\r\n          </button>\r\n        </Tippy>\r\n        <Tippy\r\n          content=\"Click to decrement the number of the product to buy\"\r\n          disabled={counterContext.disable}\r\n          placement=\"top-end\"\r\n          delay={100}\r\n        >\r\n          <button\r\n            onClick={() => handleValueChange(\"decrement\")}\r\n            className=\"btn btn-dark btn-sm my-1 mx-1 minus\"\r\n          >\r\n            <span style={addMinusStyle}>-</span>\r\n          </button>\r\n        </Tippy>\r\n        <Tippy\r\n          content=\"Click to delete the product from the list\"\r\n          disabled={counterContext.disable}\r\n          placement=\"top-end\"\r\n          delay={100}\r\n        >\r\n          <button onClick={onDelete} className=\"btn btn-danger btn-sm\">\r\n            Del\r\n          </button>\r\n        </Tippy>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default React.memo(CounterH);\r\n","import React, {\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n} from \"react\";\r\nimport Tippy from \"@tippyjs/react\";\r\nimport CounterH from \"./CounterH\";\r\nimport { CountContext } from \"../App\";\r\nimport Modal from \"react-modal\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction CountersH() {\r\n  const [textOffer, setTextOffer] = useState(\r\n    <div className=\"h5\">\r\n      <div className=\"todayOffer mb-2\">Today's special offer!</div>\r\n      <div className=\"mb-3\">\r\n        <span>\r\n          * If you buy for more than{\" \"}\r\n          <span style={{ color: \"royalblue\" }}>$500</span> you will get{\" \"}\r\n          <span style={{ color: \"royalblue\" }}>10%</span> discount! *\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const counterRef = useRef([]);\r\n  const [counterToBeDeleted, setCounterToBeDeleted] = useState({});\r\n  const counterContext = useContext(CountContext);\r\n  const priceContext = counterContext.totalPrice;\r\n  const prevTotalPrice = counterContext.prevWholePrice;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (priceContext <= 500 && prevTotalPrice > 500) ||\r\n      (priceContext > 500 && prevTotalPrice <= 500)\r\n    ) {\r\n      callTextOffer();\r\n      console.log(\"CountersH callTextOffer render!\");\r\n    }\r\n  }, [priceContext]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"CountersH textOffer render!\");\r\n  }, [textOffer]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"CountersH counterContext render!\");\r\n  }, [counterContext]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"CountersH modalIsOpen render!\");\r\n  }, [modalIsOpen]);\r\n\r\n  // async function callTextOffer() {\r\n  const callTextOffer = useCallback(async () => {\r\n    const txt = await handleTextOffer;\r\n    setTextOffer(txt);\r\n  }, [priceContext]);\r\n\r\n  const addToRef = useCallback((el) => {\r\n    if (el && !counterRef.current.includes(el)) {\r\n      counterRef.current.push(el);\r\n    }\r\n  }, []);\r\n\r\n  const handleModalDelete = (e) => {\r\n    console.log(\"handleModalDelete\");\r\n    setModalIsOpen(false);\r\n    if (e.target.id === \"yes\") {\r\n      counterContext.countDispatch({\r\n        type: \"delete\",\r\n        counterNo: counterToBeDeleted,\r\n      });\r\n    } else return false;\r\n  };\r\n\r\n  const handleTextOffer = useMemo(() => {\r\n    return new Promise((resolve, reject) => {\r\n      if (priceContext === undefined)\r\n        reject(new Error(\"Error to get total price!\"));\r\n      else {\r\n        let txt;\r\n        setTimeout(() => {\r\n          if (priceContext <= 500) {\r\n            txt = (\r\n              <div className=\"h5\">\r\n                <div className=\"todayOffer mb-2\">Today's special offer!</div>\r\n                <div className=\"mb-3\">\r\n                  <span>\r\n                    * If you buy for more than{\" \"}\r\n                    <span style={{ color: \"royalblue\" }}>$500</span> you will\r\n                    get <span style={{ color: \"royalblue\" }}>10%</span>{\" \"}\r\n                    discount! *\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            );\r\n          } else {\r\n            txt = (\r\n              <div className=\"h5\">\r\n                <div className=\"todayOffer mb-2\">Congratulations!!!</div>\r\n                <div className=\"mb-3\">\r\n                  <span style={{ fontWeight: \"bold\", color: \"royalblue\" }}>\r\n                    * You've got{\" \"}\r\n                    <span style={{ color: \"mediumvioletred\" }}>10%</span>{\" \"}\r\n                    DISCOUNT! *\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n          resolve(txt);\r\n        }, counterContext.durationTime * 550);\r\n      }\r\n    });\r\n  }, [priceContext, counterContext.durationTime]);\r\n\r\n  const callSetModal = (bool) => {\r\n    setModalIsOpen(bool);\r\n  };\r\n\r\n  const getBtnTipsClass = useMemo(() => {\r\n    // console.log(\"getBtnTipsClass Fn\");\r\n    let classes = \"btn text-center btn-sm ml-2 \";\r\n    classes += counterContext.disable === false ? \"btn-light\" : \"btn-info\";\r\n    return classes;\r\n  }, [counterContext.disable]);\r\n\r\n  const counterArray = useMemo(() => {\r\n    // console.log(\"counterArray\");\r\n    return counterContext.countState.map((counter) => {\r\n      return (\r\n        <CounterH\r\n          key={counter.id}\r\n          singleCounter={counter}\r\n          ref={addToRef}\r\n          // modalOpen={setModalIsOpen}\r\n          modalOpen={callSetModal}\r\n          counterToDelete={setCounterToBeDeleted}\r\n        />\r\n      );\r\n    });\r\n  }, [counterContext.countState]);\r\n\r\n  return (\r\n    <main className=\"main m-0 p-sm-2 row\">\r\n      <Modal\r\n        className=\"dialog-box border border-warning text-center py-4 px-5\"\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={() => callSetModal(false)}\r\n        shouldCloseOnOverlayClick={false}\r\n        style={{\r\n          overlay: { backgroundColor: \"rgba(169, 169, 180, 0.733)\" },\r\n          content: {\r\n            color: \"crimson\",\r\n            backgroundColor: \"whitesmoke\",\r\n            padding: \"30px\",\r\n          },\r\n        }}\r\n      >\r\n        <div className=\"btn-close2\">\r\n          <button\r\n            className=\"btn btn-sm btn-basic btn-alert close-btn border-dark font-weight-bold\"\r\n            onClick={() => setModalIsOpen(false)}\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n\r\n        <h4 className=\"bg-warning mb-3 p-1 h5\">Danger Zone!</h4>\r\n        <h5 className=\"mb-4 confirm-age h6\">Confirm deleting the product!</h5>\r\n        <h4 className=\"dialog-question text-center mx-auto h6\">\r\n          Are you sure you want to delete the product from the list?\r\n        </h4>\r\n        <button\r\n          className=\"btn btn-danger btn-alert mr-5 mt-3\"\r\n          id=\"yes\"\r\n          onClick={handleModalDelete}\r\n        >\r\n          YES\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary btn-alert mt-3\"\r\n          id=\"no\"\r\n          onClick={handleModalDelete}\r\n        >\r\n          NO\r\n        </button>\r\n      </Modal>\r\n\r\n      <div className=\"offer pt-2 px-1 px-md-2 col-12 col-md-10\">\r\n        <div className=\"h5 specialOffer\">{textOffer} </div>\r\n      </div>\r\n      <div className=\"w-100\"></div>\r\n      <div className=\"h5 ml-2 mt-3 mainTitle\">\r\n        List of products in our shop:\r\n      </div>\r\n      <div className=\"w-100\"></div>\r\n      <Tippy\r\n        content=\"Click to reset number of selected products to zero\"\r\n        placement=\"top-start\"\r\n        disabled={counterContext.disable}\r\n      >\r\n        <button\r\n          onClick={() =>\r\n            counterContext.countDispatch({\r\n              type: \"reset\",\r\n            })\r\n          }\r\n          className=\"btn text-center btn-sm mx-2 my-3 reset\"\r\n        >\r\n          Reset\r\n        </button>\r\n      </Tippy>\r\n\r\n      <Tippy\r\n        content={\r\n          <>\r\n            <div>Click to turn off / on tips</div>\r\n          </>\r\n        }\r\n        placement=\"left-end\"\r\n        disabled={counterContext.disable}\r\n      >\r\n        <button\r\n          onClick={() => counterContext.setDisable(!counterContext.disable)}\r\n          className={getBtnTipsClass}\r\n        >\r\n          {counterContext.disable === false ? \"Turn off tips\" : \"Turn on tips\"}\r\n        </button>\r\n      </Tippy>\r\n\r\n      <div className=\"w-100\"></div>\r\n      <div className=\"container mx-1 counters\">{counterArray}</div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default React.memo(CountersH);\r\n","import React, {\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport { CountContext } from \"../App\";\r\nimport CountUp from \"react-countup\";\r\n\r\nconst NavbarH = () => {\r\n  const counterContext = useContext(CountContext);\r\n  const [badgeClasses, setBadgeClasses] = useState(\r\n    \"badge badge-pill ml-1 badge-warning\"\r\n  );\r\n\r\n  const priceContext = counterContext.totalPrice;\r\n\r\n  useEffect(() => {\r\n    getBadgeCl();\r\n  }, [priceContext]);\r\n\r\n  console.log(\"Navbar render!\");\r\n\r\n  const handleSumupValues = useMemo(() => {\r\n    // console.log(\"handleSumupValues Fn\");\r\n    return counterContext.countState.reduce((countPrev, countNext) => {\r\n      return countPrev + countNext.value;\r\n    }, 0);\r\n  }, [counterContext.countState]);\r\n\r\n  const getBadgeCl = useCallback(() => {\r\n    // console.log(\"getBadgeCl NavbarH\");\r\n    let classes = \"badge badge-pill  ml-1 \";\r\n    classes += handleSumupValues === 0 ? \"badge-warning\" : \"badge-primary\";\r\n    if (counterContext.prevWholeValue - handleSumupValues <= 0) {\r\n      setBadgeClasses(classes);\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        if (reject.length > 1) reject(new Error(\"Error to get total price!\"));\r\n        else {\r\n          setTimeout(() => {\r\n            setBadgeClasses(classes);\r\n            resolve(classes);\r\n          }, counterContext.durationTime * 550);\r\n        }\r\n      });\r\n    }\r\n  }, [counterContext.countState]);\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light ml-2\">\r\n      <a className=\"navbar-brand\" href=\"##\">\r\n        <div className=\"row mb-2\">\r\n          <div>Number of&nbsp;</div>\r\n          <span className=\"font-weight-bold n1\">grades&nbsp;</span>to buy:{\" \"}\r\n          <span className=\"badge badge-pill badge-secondary ml-1 mr-0\">\r\n            {\r\n              counterContext.countState.filter((counter) => counter.value > 0)\r\n                .length\r\n            }\r\n          </span>\r\n        </div>\r\n        {/* <div className=\"w-100 my-1\"></div> */}\r\n        <div className=\"row mb-2\">\r\n          <span>Number of&nbsp;</span>\r\n          <span className=\"font-weight-bold n2\">products&nbsp;</span>\r\n          to buy:\r\n          <span className={badgeClasses}>\r\n            <CountUp\r\n              start={counterContext.prevWholeValue}\r\n              end={handleSumupValues}\r\n              duration={\r\n                counterContext.prevWholeValue - handleSumupValues <= 0\r\n                  ? 0.3\r\n                  : counterContext.durationTime\r\n              }\r\n            >\r\n              {({ countUpRef }) => (\r\n                <div>\r\n                  <span ref={countUpRef}></span>\r\n                </div>\r\n              )}\r\n            </CountUp>\r\n          </span>\r\n        </div>\r\n\r\n        {/* <div className=\"w-100 my-1\"></div> */}\r\n        <div className=\"row\">\r\n          <span className=\"font-weight-bold n3\">Total price: </span>\r\n          <span className=\"badge badge-pill badge-success ml-1 py-2\">\r\n            <CountUp\r\n              start={counterContext.prevWholePrice}\r\n              end={\r\n                counterContext.totalPrice <= 500\r\n                  ? counterContext.totalPrice\r\n                  : counterContext.totalPrice * 0.9\r\n              }\r\n              duration={counterContext.durationTime}\r\n              prefix=\"$\"\r\n              separator=\",\"\r\n            >\r\n              {({ countUpRef }) => (\r\n                <div>\r\n                  <span ref={countUpRef}></span>\r\n                </div>\r\n              )}\r\n            </CountUp>\r\n          </span>\r\n        </div>\r\n      </a>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default React.memo(NavbarH);\r\n","import React, {\r\n  useState,\r\n  useRef,\r\n  useEffect,\r\n  useCallback,\r\n  useContext,\r\n} from \"react\";\r\nimport { CountContext } from \"../App\";\r\nimport Tippy from \"@tippyjs/react\";\r\n\r\nconst initProduct = { name: \"\", unit: \"piece\", price: 0, adult: false };\r\n\r\nfunction Add({ addPro }) {\r\n  const counterContext = useContext(CountContext);\r\n  const [product, setProduct] = useState(initProduct);\r\n  const [addVisibility, setAddVisibility] = useState(false);\r\n  const formRef = React.createRef();\r\n  const inputRef = useRef([]);\r\n\r\n  const addToInputRef = useCallback((el) => {\r\n    if (el && !inputRef.current.includes(el)) {\r\n      inputRef.current.push(el);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addVisibility === true) {\r\n      setTimeout(() => {\r\n        inputRef.current[0].focus();\r\n      }, 1300);\r\n    }\r\n  }, [addVisibility]);\r\n\r\n  console.log(\"Add render!\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addPro(product);\r\n    setProduct(initProduct);\r\n  };\r\n\r\n  // handle focus on input fields while using the Enter key\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      switch (e.target.name) {\r\n        case \"name\":\r\n          e.preventDefault();\r\n          inputRef.current[1].focus();\r\n          break;\r\n        case \"unit\":\r\n          e.preventDefault();\r\n          inputRef.current[2].focus();\r\n          break;\r\n        case \"price\":\r\n          e.preventDefault();\r\n          inputRef.current[3].focus();\r\n          break;\r\n        case \"adult\":\r\n          e.preventDefault();\r\n          inputRef.current[4].focus();\r\n          break;\r\n        case \"submit\":\r\n          inputRef.current[0].focus();\r\n          break;\r\n        default:\r\n          e.preventDefault();\r\n          inputRef.current[0].focus();\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    let propName = e.target.value;\r\n    if (e.target.name === \"adult\") {\r\n      if (e.target.checked === true) {\r\n        propName = true;\r\n      } else {\r\n        propName = false;\r\n      }\r\n    }\r\n    setProduct({ ...product, [e.target.name]: propName });\r\n  };\r\n\r\n  const formStyle = addVisibility\r\n    ? \"formAdd row visible-form\"\r\n    : \" formAdd row hidden-form\";\r\n\r\n  return (\r\n    <div className=\"text-left bg-light\">\r\n      <Tippy\r\n        content=\"Click to open add form. Use enter, tab key or mouse to jump between input fields\"\r\n        disabled={counterContext.disable}\r\n        placement=\"top-start\"\r\n        delay={100}\r\n      >\r\n        <button\r\n          className=\"btn btn-info add-btn mt-3 mb-2 ml-2\"\r\n          onClick={() => setAddVisibility(!addVisibility)}\r\n        >\r\n          Add a new product\r\n        </button>\r\n      </Tippy>\r\n\r\n      {/* <div className=\"w-100\"></div> */}\r\n      {/* <div className={\"container \" + wrappStyleForm}> */}\r\n      <div className=\"container formWrapp\">\r\n        <form onSubmit={handleSubmit} className={formStyle} ref={formRef}>\r\n          <div className=\"row mx-0\">\r\n            {/* <div className=\"form-group col-md-12\"> */}\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"name\" className=\"label ml-md-3 mr-1\">\r\n                Name:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                className=\"form-control\"\r\n                value={product.name}\r\n                required\r\n                maxLength=\"75\"\r\n                placeholder=\"Product name\"\r\n                onChange={handleOnChange}\r\n                ref={addToInputRef}\r\n                onKeyDown={handleKeyDown}\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"unit\" className=\"label ml-md-3 mr-1\">\r\n                Unit:\r\n              </label>\r\n              <select\r\n                className=\"form-control form-control-sm\"\r\n                id=\"unit\"\r\n                name=\"unit\"\r\n                required\r\n                onChange={handleOnChange}\r\n                ref={addToInputRef}\r\n                onKeyDown={handleKeyDown}\r\n              >\r\n                <option>piece</option>\r\n                <option>kg</option>\r\n                <option>box</option>\r\n                <option>can</option>\r\n                <option>bottle</option>\r\n                <option>litre</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"price\" className=\"mr-1\">\r\n                Price ($):\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"any\"\r\n                name=\"price\"\r\n                id=\"price\"\r\n                value={product.price}\r\n                className=\"form-control\"\r\n                min=\"0\"\r\n                max=\"10000\"\r\n                required\r\n                placeholder=\"Price\"\r\n                onChange={handleOnChange}\r\n                ref={addToInputRef}\r\n                onKeyDown={handleKeyDown}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group mt-4 col-md-4\">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"adultsCheck\"\r\n                  name=\"adult\"\r\n                  checked={product.adult}\r\n                  onChange={handleOnChange}\r\n                  ref={addToInputRef}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"adultsCheck\">\r\n                  Only for adults\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-100\"></div>\r\n          <button\r\n            name=\"submit\"\r\n            className=\"btn btn-success ml-3 add-submit my-1\"\r\n            ref={addToInputRef}\r\n            onKeyDown={handleKeyDown}\r\n          >\r\n            Add\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Add);\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { CountContext } from \"../App\";\r\nimport Tippy from \"@tippyjs/react\";\r\nimport Modal from \"react-modal\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction DevelopInfo() {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const counterContext = useContext(CountContext);\r\n\r\n  useEffect(() => {\r\n    console.log(\"DevelopInfo render\");\r\n  });\r\n\r\n  return (\r\n    <div className=\"dev-info text-right mt-2\">\r\n      <Tippy\r\n        content=\"Click to see some general information about the page's front-end environment\"\r\n        disabled={counterContext.disable}\r\n        placement=\"top-start\"\r\n        delay={100}\r\n      >\r\n        <button\r\n          className=\"btn btn-light btn-sm m-2\"\r\n          onClick={() => setModalIsOpen(true)}\r\n        >\r\n          Developing info\r\n        </button>\r\n      </Tippy>\r\n      <Modal\r\n        className=\"dialog-box border text-center pt-4 pb-5 px-5\"\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={() => setModalIsOpen(false)}\r\n        shouldCloseOnOverlayClick={true}\r\n        style={{\r\n          overlay: { backgroundColor: \"rgba(169, 169, 180, 0.733)\" },\r\n          content: {\r\n            color: \"snow\",\r\n            backgroundColor: \"whitesmoke\",\r\n            padding: \"30px\",\r\n          },\r\n        }}\r\n      >\r\n        <div className=\"btn-close2\">\r\n          <button\r\n            className=\"btn btn-sm btn-basic btn-alert close-btn border-dark font-weight-bold\"\r\n            onClick={() => setModalIsOpen(false)}\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n\r\n        <h4 className=\"bg-info mb-3 p-1 h5\">Webdeveloping basic information</h4>\r\n        <div className=\"dialog-question text-center mx-auto dev-box\">\r\n          This page was built in react.js with functional components based on\r\n          HOOK tools such as useState, useEffect, useContext, useRef, useMemo,\r\n          useCallback and useReducer. There are some additional libraries used\r\n          here such as: @tippyjs/react, react-modal, react-toastify and\r\n          react-countup. All components have been optimized.\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(DevelopInfo);\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useReducer,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport \"./App.css\";\r\nimport CountersH from \"./componentHook/CountersH\";\r\nimport NavbarH from \"./componentHook/NavbarH\";\r\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"tippy.js/dist/tippy.css\";\r\nimport Modal from \"react-modal\";\r\nimport AddProd from \"./componentHook/AddProd\";\r\nimport DevelopInfo from \"./componentHook/DevelopInfo\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport const CountContext = React.createContext();\r\nexport const ModalTipsContext = React.createContext();\r\n\r\nconst initState = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    name: \"Coffe machine DeLonghi S 22.110.B\",\r\n    unit: \"piece\",\r\n    price: 200,\r\n    adult: false,\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 0,\r\n    name: \"Earl Grey Tea, 100 Tea Bags\",\r\n    unit: \"box\",\r\n    price: 10,\r\n    adult: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 0,\r\n    name: \"Every Day Tea, 100 Tea Bags\",\r\n    unit: \"box\",\r\n    price: 12,\r\n    adult: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 0,\r\n    name: \"Bordeaux 2018\",\r\n    unit: \"bottle\",\r\n    price: 20,\r\n    adult: true,\r\n  },\r\n  { id: 4, value: 0, name: \"Beer Tuborg\", unit: \"can\", price: 5, adult: true },\r\n];\r\n\r\nconst reducer = (state, action) => {\r\n  let stateCopy = [...state];\r\n  let index;\r\n  if (action.type !== \"add\" && action.type !== \"delete\") {\r\n    index = state.indexOf(action.counterNo);\r\n    stateCopy[index] = { ...action.counterNo };\r\n  } else if (action.type === \"add\") {\r\n    index = state.length;\r\n    stateCopy[index] = { id: index, value: 0, ...action.counterNo };\r\n  } else if (action.type === \"delete\") {\r\n    // this loop is necessary to avoid working on original state internal objects\r\n    for (let i = 0; i < stateCopy.length; i++) {\r\n      stateCopy[i] = { ...state[i] };\r\n    }\r\n    stateCopy = stateCopy.filter((obj) => obj.id !== action.counterNo.id);\r\n    for (let i = 0; i < stateCopy.length; i++) {\r\n      stateCopy[i].id = i;\r\n    }\r\n  }\r\n\r\n  switch (action.type) {\r\n    case \"increment\":\r\n      stateCopy[index].value++;\r\n      return stateCopy;\r\n    case \"decrement\":\r\n      if (stateCopy[index].value <= 0) {\r\n        return stateCopy;\r\n      } else {\r\n        stateCopy[index].value--;\r\n        return stateCopy;\r\n      }\r\n    case \"yesAdult\":\r\n      stateCopy[index].adult = false;\r\n      if (stateCopy[index].id === action.adultCounter.id) {\r\n        stateCopy[index].value++;\r\n      }\r\n      return stateCopy;\r\n    case \"add\":\r\n      return stateCopy;\r\n    case \"delete\":\r\n      return stateCopy;\r\n    case \"reset\":\r\n      return initState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// time for setTimeout in promises\r\nconst durationTime = 1.6;\r\n\r\nfunction App() {\r\n  const [countObjects, dispatch] = useReducer(reducer, initState);\r\n\r\n  // store the previous value of all prices and numbers of all products (\"value\")\r\n  const prevTotalPrice = useRef(\r\n    countObjects.reduce((prevC, nextC) => {\r\n      return prevC + nextC.price * nextC.value;\r\n    }, 0)\r\n  );\r\n  const prevTotalValue = useRef(\r\n    countObjects.reduce((prevC, nextC) => {\r\n      return prevC + nextC.value;\r\n    }, 0)\r\n  );\r\n\r\n  // variable for tipps to be \"abled\" or \"disabled\"\r\n  const [disable, setDisable] = useState(false);\r\n  // flag for modal opened or closed\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  // flag to check if the client is adult or not\r\n  const [adultCounterClicked, setAdultCounterClicked] = useState({});\r\n\r\n  // store the previous value of all prices and numbers of all products (\"value\")\r\n  useEffect(() => {\r\n    prevTotalPrice.current = countObjects.reduce((prevC, nextC) => {\r\n      return prevC + nextC.price * nextC.value;\r\n    }, 0);\r\n    prevTotalValue.current = countObjects.reduce((prevC, nextC) => {\r\n      return prevC + nextC.value;\r\n    }, 0);\r\n  }, [countObjects]);\r\n\r\n  console.log(\"App render!\");\r\n\r\n  const notify = () => {\r\n    console.log(\"notify\");\r\n    toast.info(\r\n      \"To get wholesales prices of our products you are more than welcome to contact with our office.\",\r\n      {\r\n        position: \"top-right\",\r\n        autoClose: 8000,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        transition: Slide,\r\n      }\r\n    );\r\n  };\r\n\r\n  const totalPrice = useMemo(() => {\r\n    // console.log(\"totalPrice Fn\");\r\n    return countObjects.reduce((c1, c2) => {\r\n      return c1 + c2.price * c2.value;\r\n    }, 0);\r\n  }, [countObjects]);\r\n\r\n  const handleModalAnswer = (e) => {\r\n    setModalIsOpen(false);\r\n    if (e.target.id === \"yes\") {\r\n      countObjects.forEach((counter) => {\r\n        if (counter.adult === true) {\r\n          dispatch({\r\n            type: \"yesAdult\",\r\n            counterNo: counter,\r\n            adultCounter: adultCounterClicked,\r\n          });\r\n        }\r\n      });\r\n    } else return false;\r\n  };\r\n\r\n  const addProduct = useCallback(\r\n    (productObj) => {\r\n      dispatch({ type: \"add\", counterNo: productObj });\r\n    },\r\n    [countObjects]\r\n  );\r\n\r\n  const valueContextFirst = useMemo(() => {\r\n    return {\r\n      countState: countObjects,\r\n      countDispatch: dispatch,\r\n      prevWholePrice: prevTotalPrice.current,\r\n      prevWholeValue: prevTotalValue.current,\r\n      totalPrice,\r\n      durationTime,\r\n      disable,\r\n      setDisable,\r\n      setAdultCounterClicked,\r\n    };\r\n  }, [countObjects, disable]);\r\n\r\n  const valueContextModal = useMemo(() => {\r\n    return { toastNotify: notify, setModalIsOpen };\r\n  }, [countObjects]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Modal\r\n        className=\"dialog-box border border-warning text-center py-4 px-5\"\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={() => setModalIsOpen(false)}\r\n        shouldCloseOnOverlayClick={false}\r\n        style={{\r\n          overlay: { backgroundColor: \"rgba(169, 169, 180, 0.733)\" },\r\n          content: {\r\n            color: \"crimson\",\r\n            backgroundColor: \"whitesmoke\",\r\n            padding: \"50px\",\r\n          },\r\n        }}\r\n      >\r\n        <div className=\"btn-close\">\r\n          <button\r\n            className=\"btn btn-sm btn-basic btn-alert border-dark font-weight-bold close-btn mx-2\"\r\n            onClick={() => setModalIsOpen(false)}\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n        <h4 className=\"bg-warning mb-3 p-1 h5\">Adult Zone!</h4>\r\n        <h5 className=\"mb-4 confirm-age h6\">Confirm your age!</h5>\r\n        <h4 className=\"dialog-question h5\">Are you over 18?</h4>\r\n        <button\r\n          className=\"btn btn-primary btn-alert mr-5 mt-3\"\r\n          id=\"yes\"\r\n          onClick={handleModalAnswer}\r\n        >\r\n          YES\r\n        </button>\r\n        <button\r\n          className=\"btn btn-danger btn-alert mt-3\"\r\n          id=\"no\"\r\n          onClick={handleModalAnswer}\r\n        >\r\n          NO\r\n        </button>\r\n      </Modal>\r\n      <CountContext.Provider value={valueContextFirst}>\r\n        <NavbarH />\r\n        <ModalTipsContext.Provider value={valueContextModal}>\r\n          <CountersH />\r\n        </ModalTipsContext.Provider>\r\n        <AddProd addPro={addProduct} />\r\n        <DevelopInfo />\r\n      </CountContext.Provider>\r\n      <ToastContainer style={{ textAlign: \"justify\" }} limit={1} />\r\n      <footer className=\"text-center mx-auto my-1 footer\">\r\n        &copy; 2021 <i>by</i> codencja\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}