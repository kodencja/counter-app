{"version":3,"sources":["componentHook/CounterH.jsx","componentHook/Danger.jsx","componentHook/CountersH.jsx","App.js","reportWebVitals.js","componentHook/NavbarH.jsx","index.js"],"names":["CounterH","React","forwardRef","props","ref","counterContext","useContext","CountContext","modalTipContext","ModalTipsContext","console","log","singleCounter","modalOpen","counterToDelete","addMinusStyle","fontSize","fontWeight","getBadgeClasses","useMemo","classes","value","formatCount","count","handleValueChange","txtType","adult","setAdultCounterClicked","setModalIsOpen","toastNotify","countDispatch","type","counterNo","className","name","unit","price","content","disabled","disable","placement","delay","onClick","style","e","memo","areEqual","prevProps","nextProps","onModalIsOpen","Danger","onHandleModalDelete","onSetModalIsOpen","isOpen","onRequestClose","shouldCloseOnOverlayClick","overlay","backgroundColor","color","padding","id","Modal","setAppElement","CountersH","useState","textOffer","setTextOffer","counterRef","useRef","modalIsOpen","counterToBeDeleted","setCounterToBeDeleted","priceContext","totalPrice","prevTotalPrice","prevWholePrice","useEffect","callTextOffer","useCallback","a","handleTextOffer","txt","addToRef","el","current","includes","push","Promise","resolve","reject","undefined","Error","setTimeout","durationTime","callSetModal","bool","getBtnTipsClass","counterArray","countState","map","counter","onCounterToBeDeleted","target","setDisable","Adult","lazy","createContext","initState","reducer","state","action","index","stateCopy","indexOf","length","i","filter","obj","adultCounter","App","children","useReducer","countObjects","dispatch","reduce","prevC","nextC","prevTotalValue","adultCounterClicked","notify","toast","info","position","autoClose","closeOnClick","pauseOnHover","draggable","transition","Slide","c1","c2","addProduct","productObj","valueContextFirst","prevWholeValue","valueContextModal","loading","fallback","onCountObjects","onDispatch","onAdultCounterClicked","Provider","cloneElement","onDisable","addPro","textAlign","limit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavbarH","badgeClasses","setBadgeClasses","getBadgeCl","handleSumupValues","countPrev","countNext","href","start","end","duration","countUpRef","prefix","separator","DevelopInfo","Add","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac862d92.chunk.js","sourcesContent":["import React, { useContext, useMemo } from \"react\";\r\nimport { CountContext, ModalTipsContext } from \"../App\";\r\nimport Tippy from \"@tippyjs/react\";\r\n\r\nconst CounterH = React.forwardRef((props, ref) => {\r\n  const counterContext = useContext(CountContext);\r\n  const modalTipContext = useContext(ModalTipsContext);\r\n\r\n  console.log(\"CounterH render!\");\r\n\r\n  const { singleCounter, modalOpen, counterToDelete } = props;\r\n\r\n  const addMinusStyle = {\r\n    fontSize: \"1.25rem\",\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  const getBadgeClasses = useMemo(() => {\r\n    // console.log(\"getBadgeClasses CounterH\");\r\n    let classes =\r\n      \"mt-2 mb-1 mb-sm-0 mt-md-0 mx-3 mx-sm-1 mx-md-1 mx-lg-0 mx-xl-2 \";\r\n    classes += singleCounter.value === 0 ? \"bwarning\" : \"bprimary\";\r\n    return classes;\r\n  }, [singleCounter.value]);\r\n\r\n  const formatCount = useMemo(() => {\r\n    // console.log(\"formatCount Fn\");\r\n    // object destructuring\r\n    const { value: count } = singleCounter;\r\n    return count === 0 ? \"Zero\" : count;\r\n  }, [singleCounter]);\r\n\r\n  // handle change of value i.e. increment or decrement of the product number\r\n  const handleValueChange = (txtType) => {\r\n    // console.log(\"handleValueChange Fn\");\r\n    if (singleCounter.adult === true) {\r\n      if (txtType === \"increment\") {\r\n        // console.log(\"adult zone!\");\r\n        counterContext.setAdultCounterClicked(singleCounter);\r\n        modalTipContext.setModalIsOpen(true);\r\n      } else if (txtType === \"decrement\") {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (\r\n        singleCounter.value >= 10 &&\r\n        singleCounter.value % 10 === 0 &&\r\n        txtType === \"increment\"\r\n      ) {\r\n        modalTipContext.toastNotify();\r\n        counterContext.countDispatch({\r\n          type: txtType,\r\n          counterNo: singleCounter,\r\n        });\r\n      } else if (txtType === \"increment\") {\r\n        counterContext.countDispatch({\r\n          type: txtType,\r\n          counterNo: singleCounter,\r\n        });\r\n      } else if (txtType === \"decrement\" && singleCounter.value > 0) {\r\n        counterContext.countDispatch({\r\n          type: txtType,\r\n          counterNo: singleCounter,\r\n        });\r\n      } else if (txtType === \"decrement\" && singleCounter.value <= 0) {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDelete = (e) => {\r\n    modalOpen(true);\r\n    counterToDelete(singleCounter);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-4 row mx-0 px-0 align-items-start\" ref={ref}>\r\n      <div className=\"col-sm-4 col-lg-3 name-col text-center\">\r\n        <div className=\"sm-caps bgr1 mx-2 mb-1\">Name:</div>\r\n        <div className=\"fCol1 prodName\">{singleCounter.name}</div>\r\n      </div>\r\n      <div className=\"mt-sm-0 mt-3 col-md-2 col-sm-3 col-lg-2 text-center\">\r\n        <div className=\"sm-caps bgr2 mx-2 mb-1\">Unit:</div>\r\n        <div className=\"fCol1 unitQ mb-sm-0\">{singleCounter.unit}</div>\r\n      </div>\r\n      <div className=\"mt-sm-0 mt-3 col-md-2 col-sm-3 col-lg-2 text-center\">\r\n        <div className=\"sm-caps bgr3 mx-2 mb-1\">Price:</div>\r\n        <div className=\"fCol2 price mb-sm-0\">${singleCounter.price}</div>\r\n      </div>\r\n\r\n      <div className=\"w-50 d-none d-sm-block d-md-none\"></div>\r\n      <div className=\"col-lg-2 col-md-3 col-sm-4 mt-sm-0 mt-2 mb-2 mb-sm-0 text-center px-3 pr-sm-2\">\r\n        <div className={getBadgeClasses}>\r\n          <span className=\"badge-no-text\">{formatCount}</span>\r\n        </div>\r\n        <Tippy\r\n          content=\"Click to increment the number of the product to buy\"\r\n          disabled={counterContext.disable}\r\n          placement=\"top-end\"\r\n          delay={100}\r\n        >\r\n          <button\r\n            onClick={() => handleValueChange(\"increment\")}\r\n            className=\"btn btn-success btn-sm my-1 plus\"\r\n          >\r\n            <span style={addMinusStyle}>+</span>\r\n          </button>\r\n        </Tippy>\r\n        <Tippy\r\n          content=\"Click to decrement the number of the product to buy\"\r\n          disabled={counterContext.disable}\r\n          placement=\"top-end\"\r\n          delay={100}\r\n        >\r\n          <button\r\n            onClick={() => handleValueChange(\"decrement\")}\r\n            className=\"btn btn-dark btn-sm my-1 mx-1 minus\"\r\n          >\r\n            <span style={addMinusStyle}>-</span>\r\n          </button>\r\n        </Tippy>\r\n        <Tippy\r\n          content=\"Click to delete the product from the list\"\r\n          disabled={counterContext.disable}\r\n          placement=\"top-end\"\r\n          delay={100}\r\n        >\r\n          <button onClick={onDelete} className=\"btn btn-danger btn-sm\">\r\n            Del\r\n          </button>\r\n        </Tippy>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default React.memo(CounterH);\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  return prevProps.onModalIsOpen === nextProps.onModalIsOpen;\r\n}\r\n\r\nfunction Danger(props) {\r\n  const { onHandleModalDelete, onSetModalIsOpen, onModalIsOpen } = props;\r\n\r\n  console.log(\"Danger Fn\");\r\n\r\n  return (\r\n    <Modal\r\n      className=\"dialog-box border border-warning text-center py-4 px-5\"\r\n      isOpen={onModalIsOpen}\r\n      onRequestClose={() => onSetModalIsOpen(false)}\r\n      shouldCloseOnOverlayClick={false}\r\n      style={{\r\n        overlay: { backgroundColor: \"rgba(169, 169, 180, 0.733)\" },\r\n        content: {\r\n          color: \"crimson\",\r\n          backgroundColor: \"whitesmoke\",\r\n          padding: \"30px\",\r\n        },\r\n      }}\r\n    >\r\n      <div className=\"btn-close2\">\r\n        <button\r\n          className=\"btn btn-sm btn-basic btn-alert close-btn border-dark font-weight-bold\"\r\n          onClick={() => onSetModalIsOpen(false)}\r\n        >\r\n          X\r\n        </button>\r\n      </div>\r\n\r\n      <h4 className=\"bg-warning mb-3 p-1 h5\">Danger Zone!</h4>\r\n      <h5 className=\"mb-4 confirm-age h6\">Confirm deleting the product!</h5>\r\n      <h4 className=\"dialog-question text-center mx-auto h6\">\r\n        Are you sure you want to delete the product from the list?\r\n      </h4>\r\n      <button\r\n        className=\"btn btn-danger btn-alert mr-5 mt-3\"\r\n        id=\"yes\"\r\n        onClick={onHandleModalDelete}\r\n      >\r\n        YES\r\n      </button>\r\n      <button\r\n        className=\"btn btn-primary btn-alert mt-3\"\r\n        id=\"no\"\r\n        onClick={onHandleModalDelete}\r\n      >\r\n        NO\r\n      </button>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default React.memo(Danger, areEqual);\r\n","import React, {\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n} from \"react\";\r\nimport Tippy from \"@tippyjs/react\";\r\nimport CounterH from \"./CounterH\";\r\nimport { CountContext } from \"../App\";\r\nimport Danger from \"./Danger\";\r\n\r\nfunction CountersH() {\r\n  const [textOffer, setTextOffer] = useState(\r\n    <div className=\"h5\">\r\n      <div className=\"todayOffer mb-2\">Today's special offer!</div>\r\n      <div className=\"mb-3\">\r\n        <span>\r\n          * If you buy for more than{\" \"}\r\n          <span style={{ color: \"royalblue\" }}>$500</span> you will get{\" \"}\r\n          <span style={{ color: \"royalblue\" }}>10%</span> discount! *\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const counterRef = useRef([]);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [counterToBeDeleted, setCounterToBeDeleted] = useState({});\r\n  const counterContext = useContext(CountContext);\r\n  const priceContext = counterContext.totalPrice;\r\n  const prevTotalPrice = counterContext.prevWholePrice;\r\n\r\n  console.log(\"COUNTERSH render!\");\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (priceContext <= 500 && prevTotalPrice > 500) ||\r\n      (priceContext > 500 && prevTotalPrice <= 500)\r\n    ) {\r\n      callTextOffer();\r\n      // console.log(\"CountersH callTextOffer render!\");\r\n    }\r\n  }, [priceContext]);\r\n\r\n  // async function callTextOffer() {\r\n  const callTextOffer = useCallback(async () => {\r\n    const txt = await handleTextOffer;\r\n    setTextOffer(txt);\r\n  }, [priceContext]);\r\n\r\n  const addToRef = useCallback((el) => {\r\n    if (el && !counterRef.current.includes(el)) {\r\n      counterRef.current.push(el);\r\n    }\r\n  }, []);\r\n\r\n  const handleTextOffer = useMemo(() => {\r\n    return new Promise((resolve, reject) => {\r\n      if (priceContext === undefined)\r\n        reject(new Error(\"Error to get total price!\"));\r\n      else {\r\n        let txt;\r\n        setTimeout(() => {\r\n          if (priceContext <= 500) {\r\n            txt = (\r\n              <div className=\"h5\">\r\n                <div className=\"todayOffer mb-2\">Today's special offer!</div>\r\n                <div className=\"mb-3\">\r\n                  <span>\r\n                    * If you buy for more than{\" \"}\r\n                    <span style={{ color: \"royalblue\" }}>$500</span> you will\r\n                    get <span style={{ color: \"royalblue\" }}>10%</span>{\" \"}\r\n                    discount! *\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            );\r\n          } else {\r\n            txt = (\r\n              <div className=\"h5\">\r\n                <div className=\"todayOffer mb-2\">Congratulations!!!</div>\r\n                <div className=\"mb-3\">\r\n                  <span style={{ fontWeight: \"bold\", color: \"royalblue\" }}>\r\n                    * You've got{\" \"}\r\n                    <span style={{ color: \"mediumvioletred\" }}>10%</span>{\" \"}\r\n                    DISCOUNT! *\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n          resolve(txt);\r\n        }, counterContext.durationTime * 550);\r\n      }\r\n    });\r\n  }, [priceContext, counterContext.durationTime]);\r\n\r\n  const callSetModal = (bool) => {\r\n    setModalIsOpen(bool);\r\n  };\r\n\r\n  const getBtnTipsClass = useMemo(() => {\r\n    // console.log(\"getBtnTipsClass Fn\");\r\n    let classes = \"btn text-center btn-sm ml-2 my-3 \";\r\n    classes += counterContext.disable === false ? \"btn-light\" : \"btn-info\";\r\n    return classes;\r\n  }, [counterContext.disable]);\r\n\r\n  const counterArray = useMemo(() => {\r\n    // console.log(\"counterArray\");\r\n    return counterContext.countState.map((counter) => {\r\n      return (\r\n        <CounterH\r\n          key={counter.id}\r\n          singleCounter={counter}\r\n          ref={addToRef}\r\n          // modalOpen={setModalIsOpen}\r\n          modalOpen={callSetModal}\r\n          counterToDelete={setCounterToBeDeleted}\r\n        />\r\n      );\r\n    });\r\n  }, [counterContext.countState]);\r\n\r\n  const handleModalDelete = (e) => {\r\n    // console.log(\"handleModalDelete\");\r\n    setModalIsOpen(false);\r\n    if (e.target.id === \"yes\") {\r\n      counterContext.countDispatch({\r\n        type: \"delete\",\r\n        counterNo: counterToBeDeleted,\r\n      });\r\n    } else return false;\r\n  };\r\n\r\n  return (\r\n    <main className=\"main m-0 p-sm-2 row\">\r\n      <Danger\r\n        onCounterToBeDeleted={counterToBeDeleted}\r\n        onModalIsOpen={modalIsOpen}\r\n        onSetModalIsOpen={setModalIsOpen}\r\n        onHandleModalDelete={handleModalDelete}\r\n      />\r\n\r\n      <div className=\"offer pt-2 px-1 px-md-2 col-12 col-md-10\">\r\n        <div className=\"h5 specialOffer\">{textOffer} </div>\r\n      </div>\r\n      <div className=\"w-100\"></div>\r\n      <div className=\"h5 ml-2 mt-3 mainTitle\">\r\n        List of products in our shop:\r\n      </div>\r\n      <div className=\"w-100\"></div>\r\n      <Tippy\r\n        content=\"Click to reset number of selected products to zero\"\r\n        placement=\"top-start\"\r\n        disabled={counterContext.disable}\r\n      >\r\n        <button\r\n          onClick={() =>\r\n            counterContext.countDispatch({\r\n              type: \"reset\",\r\n            })\r\n          }\r\n          className=\"btn text-center btn-sm mx-2 my-3 reset\"\r\n        >\r\n          Reset\r\n        </button>\r\n      </Tippy>\r\n\r\n      <Tippy\r\n        content={\r\n          <>\r\n            <div>Click to turn off / on tips</div>\r\n          </>\r\n        }\r\n        placement=\"left-end\"\r\n        disabled={counterContext.disable}\r\n      >\r\n        <button\r\n          onClick={() => counterContext.setDisable(!counterContext.disable)}\r\n          className={getBtnTipsClass}\r\n        >\r\n          {counterContext.disable === false ? \"Turn off tips\" : \"Turn on tips\"}\r\n        </button>\r\n      </Tippy>\r\n\r\n      <div className=\"w-100\"></div>\r\n      <div className=\"container mx-1 counters\">{counterArray}</div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default CountersH;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useReducer,\r\n  useMemo,\r\n  useCallback,\r\n  lazy,\r\n  Suspense,\r\n} from \"react\";\r\n\r\nimport CountersH from \"./componentHook/CountersH\";\r\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"tippy.js/dist/tippy.css\";\r\n\r\nconst Adult = lazy(() => import(\"./componentHook/Adult\"));\r\n\r\nexport const CountContext = React.createContext();\r\nexport const ModalTipsContext = React.createContext();\r\n\r\nconst initState = [\r\n  {\r\n    id: 0,\r\n    value: 0,\r\n    name: \"Coffe machine DeLonghi S 22.110.B\",\r\n    unit: \"piece\",\r\n    price: 200,\r\n    adult: false,\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 0,\r\n    name: \"Earl Grey Tea, 100 Tea Bags\",\r\n    unit: \"box\",\r\n    price: 10,\r\n    adult: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 0,\r\n    name: \"Every Day Tea, 100 Tea Bags\",\r\n    unit: \"box\",\r\n    price: 12,\r\n    adult: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 0,\r\n    name: \"Bordeaux 2018\",\r\n    unit: \"bottle\",\r\n    price: 20,\r\n    adult: true,\r\n  },\r\n  { id: 4, value: 0, name: \"Beer Tuborg\", unit: \"can\", price: 5, adult: true },\r\n];\r\n\r\nconst reducer = (state, action) => {\r\n  let stateCopy = [...state];\r\n  let index;\r\n  if (action.type !== \"add\" && action.type !== \"delete\") {\r\n    index = state.indexOf(action.counterNo);\r\n    stateCopy[index] = { ...action.counterNo };\r\n  } else if (action.type === \"add\") {\r\n    index = state.length;\r\n    stateCopy[index] = { id: index, value: 0, ...action.counterNo };\r\n  } else if (action.type === \"delete\") {\r\n    // this loop is necessary to avoid working on original state internal objects\r\n    for (let i = 0; i < stateCopy.length; i++) {\r\n      stateCopy[i] = { ...state[i] };\r\n    }\r\n    stateCopy = stateCopy.filter((obj) => obj.id !== action.counterNo.id);\r\n    for (let i = 0; i < stateCopy.length; i++) {\r\n      stateCopy[i].id = i;\r\n    }\r\n  }\r\n\r\n  switch (action.type) {\r\n    case \"increment\":\r\n      stateCopy[index].value++;\r\n      return stateCopy;\r\n    case \"decrement\":\r\n      if (stateCopy[index].value <= 0) {\r\n        return stateCopy;\r\n      } else {\r\n        stateCopy[index].value--;\r\n        return stateCopy;\r\n      }\r\n    case \"yesAdult\":\r\n      stateCopy[index].adult = false;\r\n      if (stateCopy[index].id === action.adultCounter.id) {\r\n        stateCopy[index].value++;\r\n      }\r\n      return stateCopy;\r\n    case \"add\":\r\n      return stateCopy;\r\n    case \"delete\":\r\n      return stateCopy;\r\n    case \"reset\":\r\n      return initState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// time for setTimeout in promises\r\nconst durationTime = 1.6;\r\n\r\nfunction App({ children }) {\r\n  const [countObjects, dispatch] = useReducer(reducer, initState);\r\n\r\n  // store the previous value of all prices and numbers of all products (\"value\")\r\n  const prevTotalPrice = useRef(\r\n    countObjects.reduce((prevC, nextC) => {\r\n      return prevC + nextC.price * nextC.value;\r\n    }, 0)\r\n  );\r\n  const prevTotalValue = useRef(\r\n    countObjects.reduce((prevC, nextC) => {\r\n      return prevC + nextC.value;\r\n    }, 0)\r\n  );\r\n\r\n  // variable for tipps to be \"abled\" or \"disabled\"\r\n  const [disable, setDisable] = useState(false);\r\n\r\n  // flag for modal opened or closed\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  // flag to check if the client is adult or not\r\n  const [adultCounterClicked, setAdultCounterClicked] = useState({});\r\n\r\n  // store the previous value of all prices and numbers of all products (\"value\")\r\n  useEffect(() => {\r\n    prevTotalPrice.current = countObjects.reduce((prevC, nextC) => {\r\n      return prevC + nextC.price * nextC.value;\r\n    }, 0);\r\n    prevTotalValue.current = countObjects.reduce((prevC, nextC) => {\r\n      return prevC + nextC.value;\r\n    }, 0);\r\n  }, [countObjects]);\r\n\r\n  console.log(\"App render!\");\r\n\r\n  useEffect(() => {\r\n    console.log(children);\r\n    // console.log(children.type.type.name);\r\n  }, []);\r\n\r\n  const notify = () => {\r\n    console.log(\"notify\");\r\n    toast.info(\r\n      \"To get wholesales prices of our products you are more than welcome to contact with our office.\",\r\n      {\r\n        position: \"top-right\",\r\n        autoClose: 8000,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        transition: Slide,\r\n      }\r\n    );\r\n  };\r\n\r\n  const totalPrice = useMemo(() => {\r\n    // console.log(\"totalPrice Fn\");\r\n    return countObjects.reduce((c1, c2) => {\r\n      return c1 + c2.price * c2.value;\r\n    }, 0);\r\n  }, [countObjects]);\r\n\r\n  const addProduct = useCallback(\r\n    (productObj) => {\r\n      dispatch({ type: \"add\", counterNo: productObj });\r\n    },\r\n    [countObjects]\r\n  );\r\n\r\n  const valueContextFirst = useMemo(() => {\r\n    return {\r\n      countState: countObjects,\r\n      countDispatch: dispatch,\r\n      prevWholePrice: prevTotalPrice.current,\r\n      prevWholeValue: prevTotalValue.current,\r\n      totalPrice,\r\n      durationTime,\r\n      disable,\r\n      setDisable,\r\n      setAdultCounterClicked,\r\n    };\r\n  }, [countObjects, disable]);\r\n\r\n  const valueContextModal = useMemo(() => {\r\n    return { toastNotify: notify, setModalIsOpen };\r\n  }, [countObjects]);\r\n\r\n  const loading = <p>Loading...</p>;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Suspense fallback={loading}>\r\n        <Adult\r\n          onModalIsOpen={modalIsOpen}\r\n          onSetModalIsOpen={setModalIsOpen}\r\n          onCountObjects={countObjects}\r\n          onDispatch={dispatch}\r\n          onAdultCounterClicked={adultCounterClicked}\r\n        />\r\n      </Suspense>\r\n\r\n      <CountContext.Provider value={valueContextFirst}>\r\n        {React.cloneElement(children[0], { counterContext: valueContextFirst })}\r\n        <ModalTipsContext.Provider value={valueContextModal}>\r\n          <CountersH />\r\n        </ModalTipsContext.Provider>\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          {React.cloneElement(children[1], {\r\n            onDisable: disable,\r\n            addPro: addProduct,\r\n          })}\r\n        </Suspense>\r\n      </CountContext.Provider>\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        {React.cloneElement(children[2], {\r\n          onDisable: disable,\r\n        })}\r\n      </Suspense>\r\n      <ToastContainer style={{ textAlign: \"justify\" }} limit={1} />\r\n      <footer className=\"text-center mx-auto my-1 footer py-1\">\r\n        &copy; 2021 <i>by</i> <strong>codencja</strong>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useMemo, useState, useEffect, useCallback } from \"react\";\r\nimport CountUp from \"react-countup\";\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  return (\r\n    prevProps.counterContext.countState === nextProps.counterContext.countState\r\n  );\r\n}\r\n\r\nfunction NavbarH({ counterContext }) {\r\n  const [badgeClasses, setBadgeClasses] = useState(\r\n    \"badge badge-pill ml-1 badge-warning\"\r\n  );\r\n\r\n  const priceContext = counterContext.totalPrice;\r\n\r\n  useEffect(() => {\r\n    getBadgeCl();\r\n  }, [priceContext]);\r\n\r\n  console.log(\"Navbar render!\");\r\n\r\n  const handleSumupValues = useMemo(() => {\r\n    // console.log(\"handleSumupValues Fn\");\r\n    return counterContext.countState.reduce((countPrev, countNext) => {\r\n      return countPrev + countNext.value;\r\n    }, 0);\r\n  }, [counterContext.countState]);\r\n\r\n  const getBadgeCl = useCallback(() => {\r\n    // console.log(\"getBadgeCl NavbarH\");\r\n    let classes = \"badge badge-pill  ml-1 \";\r\n    classes += handleSumupValues === 0 ? \"badge-warning\" : \"badge-primary\";\r\n    if (counterContext.prevWholeValue - handleSumupValues <= 0) {\r\n      setBadgeClasses(classes);\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        if (reject.length > 1) reject(new Error(\"Error to get total price!\"));\r\n        else {\r\n          setTimeout(() => {\r\n            setBadgeClasses(classes);\r\n            resolve(classes);\r\n          }, counterContext.durationTime * 550);\r\n        }\r\n      });\r\n    }\r\n  }, [counterContext.countState]);\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light ml-2\">\r\n      <a className=\"navbar-brand\" href=\"##\">\r\n        <div className=\"row mb-2\">\r\n          <div>Number of&nbsp;</div>\r\n          <span className=\"font-weight-bold n1\">grades&nbsp;</span>to buy:{\" \"}\r\n          <span className=\"badge badge-pill badge-secondary ml-1 mr-0\">\r\n            {\r\n              counterContext.countState.filter((counter) => counter.value > 0)\r\n                .length\r\n            }\r\n          </span>\r\n        </div>\r\n        <div className=\"row mb-2\">\r\n          <span>Number of&nbsp;</span>\r\n          <span className=\"font-weight-bold n2\">products&nbsp;</span>\r\n          to buy:\r\n          <span className={badgeClasses}>\r\n            <CountUp\r\n              start={counterContext.prevWholeValue}\r\n              end={handleSumupValues}\r\n              duration={\r\n                counterContext.prevWholeValue - handleSumupValues <= 0\r\n                  ? 0.3\r\n                  : counterContext.durationTime\r\n              }\r\n            >\r\n              {({ countUpRef }) => (\r\n                <div>\r\n                  <span ref={countUpRef}></span>\r\n                </div>\r\n              )}\r\n            </CountUp>\r\n          </span>\r\n        </div>\r\n        <div className=\"row\">\r\n          <span className=\"font-weight-bold n3\">Total price: </span>\r\n          <span className=\"badge badge-pill badge-success ml-1 py-2\">\r\n            <CountUp\r\n              start={counterContext.prevWholePrice}\r\n              end={\r\n                counterContext.totalPrice <= 500\r\n                  ? counterContext.totalPrice\r\n                  : counterContext.totalPrice * 0.9\r\n              }\r\n              duration={counterContext.durationTime}\r\n              prefix=\"$\"\r\n              separator=\",\"\r\n            >\r\n              {({ countUpRef }) => (\r\n                <div>\r\n                  <span ref={countUpRef}></span>\r\n                </div>\r\n              )}\r\n            </CountUp>\r\n          </span>\r\n        </div>\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default React.memo(NavbarH, areEqual);\r\n","import React, { lazy } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavbarH from \"./componentHook/NavbarH\";\nimport \"./App.css\";\n\nconst DevelopInfo = lazy(() => import(\"./componentHook/DevelopInfo\"));\nconst Add = lazy(() => import(\"./componentHook/AddProd\"));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App>\n      <NavbarH />\n      <Add />\n      <DevelopInfo />\n    </App>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}